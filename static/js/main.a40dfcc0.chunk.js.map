{"version":3,"sources":["App.js","components/button.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","C_Users_Piotr_Junior_Desktop_Projects_basic_calculator_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Piotr_Junior_Desktop_Projects_basic_calculator_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Piotr_Junior_Desktop_Projects_basic_calculator_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","reset","setState","current","nextIsReset","previous","addToCurrent","symbol","indexOf","state","push","calculate","_this$state","length","eval","String","buttons","cols","action","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","type","value","map","btn","i","_components_button__WEBPACK_IMPORTED_MODULE_6__","key","Component","Button","concat","onClick","Boolean","window","location","hostname","match","ReactDOM","render","react_default","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a40dfcc0.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Button from './components/button';\nimport \"./css/style.css\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      current: '0',\n      previous: [],\n      nextIsReset: false\n    }\n  }\n\n  reset = () => {\n    this.setState({current: '0', nextIsReset: false, previous: []});\n  }\n\n  addToCurrent = (symbol) => {\n\n    if(['/','-','+','*'].indexOf(symbol) > -1) {\n      let {previous} = this.state;\n      previous.push(this.state.current + symbol);\n      this.setState({previous, nextIsReset: true})\n    }\n    else {\n      if((this.state.current === \"0\" && symbol !== \".\") || this.state.nextIsReset) {\n        this.setState({current: symbol, nextIsReset: false});\n      }\n      else{\n        this.setState({current: this.state.current + symbol});\n      }\n    }\n  }\n\n  calculate = (symbol) => {\n    let {current, previous, nextIsReset} = this.state;\n    if(previous.length > 0 ){\n      current = eval(String(previous[previous.length -1] + current));\n      this.setState({current, previous: [], nextIsReset: true});\n    }\n  }\n\n  render(){\n    const buttons = [\n      {symbol: 'C', cols: 3, action: this.reset},\n      {symbol: '/', cols: 1, action: this.addToCurrent},\n      {symbol: '7', cols: 1, action: this.addToCurrent},\n      {symbol: '8', cols: 1, action: this.addToCurrent},\n      {symbol: '9', cols: 1, action: this.addToCurrent},\n      {symbol: '*', cols: 1, action: this.addToCurrent},\n      {symbol: '4', cols: 1, action: this.addToCurrent},\n      {symbol: '5', cols: 1, action: this.addToCurrent},\n      {symbol: '6', cols: 1, action: this.addToCurrent},\n      {symbol: '-', cols: 1, action: this.addToCurrent},\n      {symbol: '1', cols: 1, action: this.addToCurrent},\n      {symbol: '2', cols: 1, action: this.addToCurrent},\n      {symbol: '3', cols: 1, action: this.addToCurrent},\n      {symbol: '+', cols: 1, action: this.addToCurrent},\n      {symbol: '0', cols: 2, action: this.addToCurrent},\n      {symbol: '.', cols: 1, action: this.addToCurrent},\n      {symbol: '=', cols: 1, action: this.calculate}\n    ];\n\n    return (\n      <div className=\"App\">\n        {this.state.previous.length > 0 ?\n          <div className=\"floaty-last\">{this.state.previous[this.state.previous.length - 1]}</div>\n        :null}\n        <input className=\"result\" type=\"text\" value={this.state.current} />\n\n        {buttons.map((btn, i) => {\n          return <Button key={i} symbol={btn.symbol} cols={btn.cols} action={(symbol) => btn.action(symbol)} />\n        })}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, {Component} from 'react';\r\n\r\n\r\nclass Button extends Component {\r\n    render() {\r\n        return (\r\n            <div className={`column-${this.props.cols}`}>\r\n                <button className=\"calc-button\" onClick={() => this.props.action(this.props.symbol)}>{this.props.symbol}</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}